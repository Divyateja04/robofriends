{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","margin","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACC,6BAAKL,IACL,4BAAIC,WCWOK,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAO,cAAC,EAAD,CAENT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMP,OACC,8BACMH,KCDOI,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,8BACC,uBAAOX,UAAU,mCACfY,KAAK,SACLC,YAAY,oBACZC,SAAUH,OCGAI,EATA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,OAAQ,OAAtF,SACEL,EAAMM,YC6CKC,G,wDA1Cd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEhB,YAAae,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACZzB,OAAQ,GACRM,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OAEnBoB,MAAM,8CACLxC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,UAC1B1C,MAAK,SAAA2C,GAAK,OAAI,EAAKP,SAAS,CAAEtB,OAAQ6B,S,oBASxC,WAAU,IAAD,OACFC,EAAiBC,KAAKN,MAAMzB,OAAOgC,QAAO,SAAAC,GAC/C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKV,MAAMnB,YAAY4B,kBAGjE,OAAgC,IAA7BH,KAAKN,MAAMzB,OAAOoC,OACb,2CAIP,sBAAKxC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcwB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUpB,OAAQ8B,a,GApCLO,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.d0db9095.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport \"tachyons\";\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n//we can also use destructuring and put {name, email, id} in place of props\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn <Card\r\n\t\t key={i}\r\n\t\t id={robots[i].id} \r\n\t\t name={robots[i].name} \r\n\t\t email={robots[i].email}\r\n\t\t />\r\n\t})\r\n\treturn (\r\n\t\t<div>\r\n\t      {cardComponent}\r\n\t    </div>\r\n\t);\r\n}\r\n\r\nexport default CardList\r\n//we can also remove card component and put robots.map directly","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t\t\ttype=\"search\" \r\n\t\t\t\t\tplaceholder=\"Search for Robots\"\r\n\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '3px solid black', height: '500px', margin: '5px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll","import React from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n\r\nimport Scroll from '../components/Scroll'\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//console.log(\"Check\");\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t\t// console.log(event.target.value);\r\n\t\t// console.log(filteredRobots);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\tif(this.state.robots.length === 0){\r\n\t\t\treturn <h1>Loading..</h1>\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/*<CardList robots={robots} />*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}